#include<stdio.h>

void imprimir_matriz(int sudoku [9][9], int fila, int columna);
void zeros(int sudoku[9][9], int fila, int columna);

int main()
{
    //Estructura
    int x[8];
    int y[8];
    
    //Entrada
    printf("Bienvenido a la prueba de matematicas, en esta prueba deberas resolver un sudoku.\n");
    printf("Para ello deberas introducir primero el valor de la coordenada, donde quieras poner el valor.\n");
    printf("Siendo esto de esta forma, el eje vertical, sera 'y' y es el primer valor que debes introducir, la primera posicion sera 1, mientras que la ultima sera la 9, de arriba a abajo.\n");
    printf("Mientras que el eje horizontal, ira en el mismo sentido, de izquierda a derecha y de 1 a 9.\n");
    printf("Los ceros son los valores que debes cambiar para completar el sudoku.\n");
    printf("Solo se permite un intento por coordenada, si crees que esta mal, sal y vuelve a intentarlo.\n");
    
    //Sudoku
    int sudoku [9] [9];

    int fila, columna, a, i, b, j;
    
    //Ceros
    zeros(sudoku, 9, 9);

    int a1, a2;
    
    sudoku[0][0]=7;
    sudoku[0][1]=5;
    sudoku[0][5]=4;
    sudoku[0][7]=9;
    sudoku[0][8]=2;
    sudoku[1][0]=6;
    sudoku[1][4]=2;
    sudoku[1][6]=3;
    sudoku[2][1]=2;
    sudoku[2][6]=5;
    sudoku[3][0]=1;
    sudoku[3][1]=3;
    sudoku[3][4]=7;
    sudoku[3][6]=8;
    sudoku[4][0]=2;
    sudoku[4][3]=8;
    sudoku[4][4]=1;
    sudoku[4][5]=3;
    sudoku[5][1]=6;
    sudoku[5][4]=4;
    sudoku[5][6]=7;
    sudoku[5][8]=1;
    sudoku[6][2]=7;
    sudoku[6][4]=5;
    sudoku[6][7]=6;
    sudoku[7][0]=5;
    sudoku[7][5]=1;
    sudoku[7][8]=3;
    sudoku[8][1]=1;
    sudoku[8][2]=2;
    sudoku[8][4]=8;
    sudoku[8][5]=6;
    sudoku[8][6]=9;
    sudoku[8][7]=7;
    
    for(i=0; i<47; i++)
    {
            imprimir_matriz(sudoku, 9, 9);
            printf("Dame el valor de la fila primero y despuÃ©s de la columna, donde quieras introducir el valor.\n");
            scanf("%d %d", &a, &b);
            fila=a-1;
            columna=b-1;
            printf("Ahora deme el valor que desee introducir.\n");
            scanf("%d", &sudoku[fila][columna]);
    }
    imprimir_matriz(sudoku, 9, 9);

    int sumaf=0, sumac=0;
//Filas
    for (i=0; i<9; i++)
    {
        for (j=0; j<9; j++)
        {
            sumaf = sudoku[i][j] + sumaf;
            if (sumaf == 45)
            {
                a1++;
            }
        }
    }
    if(sumaf =! 9)
    {
        printf("Has fallado.\n");
    }
//Columnas
    for (i=0; i<9; i++)
    {
        for (j=0; j<9; j++)
        {
            sumac = sudoku[j][i] + sumac;
            if (sumac == 45)
            {
                a2++;
            }
        }
    }
    if (sumac =! 9)
    {
        printf("Has fallado.\n");
    }
//Falta comprobar que no repitan numeros.
    int fallo;
    for (i=0; i<9; i++)
    {
        for (j=1; j<9; j++)
        {
           if(sudoku[i][0]==sudoku[i][j])
           {
               fallo=1;
           }
        }
        for (j=2; j<9; j++)
        {
            if((sudoku[i][1]==sudoku[i][0]) || (sudoku[i][1]==sudoku[i][j]))
            {
                fallo=1;
            }
        }
        for (j=3; j<9; j++)
        {
            if((sudoku[i][2]==sudoku[i][0]) || (sudoku[i][2]==sudoku[i][1]) || (sudoku[i][2]==sudoku[i][j]))
            {
                fallo=1;
            }
        }
        for (j=4; j<9; j++)
        {
            if((sudoku[i][3]==sudoku[i][0]) || (sudoku[i][3]==sudoku[i][1]) || (sudoku[i][3]==sudoku[i][2]) || (sudoku[i][3]==sudoku[i][j]))
            {
                fallo=1;
            }
        }
        for (j=5; j<9; j++)
        {
            if((sudoku[i][4]==sudoku[i][0]) || (sudoku[i][4]==sudoku[i][1]) || (sudoku[i][4]==sudoku[i][2]) || (sudoku[i][4]==sudoku[i][3]) || (sudoku[i][4]==sudoku[i][j]))
            {
                fallo=1;
            }
        }
        for (j=0; j<5; j++)
        {
            if((sudoku[i][5]==sudoku[i][6]) || (sudoku[i][5]==sudoku[i][7]) || (sudoku[i][5]==sudoku[i][8]) || (sudoku[i][5]==sudoku[i][9]) || (sudoku[i][5]==sudoku[i][j]))
            {
                    fallo=1;
            }
        }
        for (j=0; j<6; j++)
        {
            if((sudoku[i][6]==sudoku[i][7]) || (sudoku[i][6]==sudoku[i][8]) || (sudoku[i][6]==sudoku[i][9]) || (sudoku[i][6]==sudoku[i][j]))
            {
                fallo=1;
            }
        }
        for (j=0; j<7; j++)
        {
            if((sudoku[i][7]==sudoku[i][8]) || (sudoku[i][7]==sudoku[i][9]) || (sudoku[i][7]==sudoku[i][j]))
            {
                fallo=1;
            }
        }
        for (j=0; j<8; j++)
        {
            if((sudoku[i][8]==sudoku[i][9]) || (sudoku[i][8]==sudoku[i][j]))
            {
                fallo=1;
            }
        }
        for (j=0; j<9; j++)
        {
            if((sudoku[i][9]==sudoku[i][j]))
            {
                fallo=1;
            }
        }
        if (fallo==1)
        {
            printf("Reintenta la prueba.\n");
        }
    }
//Cuadrados.
    int tot1=0, tot2=0, tot3=0, tot4=0, tot5=0, tot6=0, tot7=0, tot8=0, tot9=0, sc1=0, sc2=0, sc3=0, sc4=0, sc5=0, sc6=0, sc7=0, sc8=0, sc9=0;
    for (i=0; i<3; i++)
    {
        for (j=0; j<3 ;j++)
        {
            sc1=sc1+sudoku[i][j];
        }
        tot1=tot1+sc1;
    }
    for (i=0; i<3; i++)
    {
        for (j=3; j<6 ;j++)
        {
            sc2=sc2+sudoku[i][j];
        }
        tot2=tot2+sc2;
    }
    for (i=0; i<3; i++)
    {
        for (j=6; j<9 ;j++)
        {
            sc3=sc3+sudoku[i][j];
        }
        tot3=tot3+sc3;
    }
    for (i=3; i<6; i++)
    {
        for (j=0; j<3 ;j++)
        {
            sc4=sc4+sudoku[i][j];
        }
        tot4=tot4+sc4;
    }
    for (i=3; i<6; i++)
    {
        for (j=3; j<6 ;j++)
        {
            sc5=sc5+sudoku[i][j];
        }
        tot5=tot5+sc5;
    }
    for (i=3; i<6; i++)
    {
        for (j=6; j<9 ;j++)
        {
            sc6=sc6+sudoku[i][j];
        }
        tot6=tot6+sc6;
    }
    for (i=6; i<9; i++)
    {
        for (j=0; j<3 ;j++)
        {
            sc7=sc7+sudoku[i][j];
        }
        tot7=tot7+sc7;
    }
    for (i=6; i<9; i++)
    {
        for (j=3; j<6 ;j++)
        {
            sc8=sc8+sudoku[i][j];
        }
        tot8=tot8+sc8;
    }
    for (i=6; i<9; i++)
    {
        for (j=6; j<9 ;j++)
        {
            sc9=sc9+sudoku[i][j];
        }
        tot9=tot9+sc9;
    }
    if((tot1 =! 45) || (tot2 =! 45) || (tot3 =! 45) || (tot4 =! 45) || (tot5 =! 45) || (tot6 =! 45) || (tot7 =! 45) || (tot8 =! 45) || (tot9 =! 45))
    {
        printf("Has fallado, vuelve a intentarlo.\n");
    }
    return 0;
}

void zeros(int sudoku[9][9], int fila, int columna)
{
    int i=0, j=0;
    for (i=0; i<= 9; i++)
    {
        for (j=0; j<= 9; j++)
        {
            sudoku[i][j]=0;
        }
    }
}

void imprimir_matriz(int sudoku[9][9], int fila, int columna)
{
    printf("   1   2   3    4   5   6     7   8   9\n");
    printf("  ______________________________________\n");
    printf(" |           |             |            |\n");
    printf("1| 7   5   %d |  %d   %d   4  |  %d   9   2 |\n", sudoku[0][2], sudoku[0][3], sudoku[0][4], sudoku[0][6]);
    printf(" |           |             |            |\n");
    printf("2| 6   %d   %d |  %d   2   %d  |  3   %d   %d |\n", sudoku[1][1], sudoku[1][2], sudoku[1][3], sudoku[1][5], sudoku[1][7], sudoku[1][8]);
    printf(" |           |             |            |\n");
    printf("3| %d   2   %d |  %d   %d   %d  |  5   %d   %d |\n", sudoku[2][0], sudoku[2][2], sudoku[2][3], sudoku[2][4], sudoku[2][5], sudoku[2][7], sudoku[2][8]);
    printf(" |-----------|-------------|------------|\n");
    printf("4| 1   3   %d |  %d   7   %d  |  8   %d   %d |\n", sudoku[3][2], sudoku[3][3], sudoku[3][5], sudoku[3][7], sudoku[3][8]);
    printf(" |           |             |            |\n");
    printf("5| 2   %d   %d |  8   1   3  |  %d   %d   %d |\n", sudoku[4][1], sudoku[4][2], sudoku[4][6], sudoku[4][7], sudoku[4][8]);
    printf(" |           |             |            |\n");
    printf("6| %d   6   %d |  %d   4   %d  |  7   %d   1 |\n", sudoku[5][0], sudoku[5][2], sudoku[5][3], sudoku[5][5], sudoku[5][7]);
    printf(" |-----------|-------------|------------|\n");
    printf("7| %d   %d   7 |  %d   5   %d  |  %d   6   %d |\n", sudoku[6][0], sudoku[6][1], sudoku[6][3], sudoku[6][5], sudoku[6][6], sudoku[6][8]);
    printf(" |           |             |            |\n");
    printf("8| 5   %d   %d |  %d   %d   1  |  %d   %d   3 |\n", sudoku[7][1], sudoku[7][2], sudoku[7][3], sudoku[7][4], sudoku[7][6], sudoku[7][7]);
    printf(" |           |             |            |\n");
    printf("9| %d   1   2 |  %d   8   6  |  9   7   %d |\n", sudoku[8][0], sudoku[8][3], sudoku[8][8]);
    printf(" |___________|_____________|____________|\n");
}

